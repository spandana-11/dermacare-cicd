function f(t){"@babel/helpers - typeof";return f=typeof Symbol=="function"&&typeof Symbol.iterator=="symbol"?function(r){return typeof r}:function(r){return r&&typeof Symbol=="function"&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r},f(t)}function b(t){if(Array.isArray(t))return t}function p(t,r){var e=t==null?null:typeof Symbol<"u"&&t[Symbol.iterator]||t["@@iterator"];if(e!=null){var n,i,u,l,a=[],o=!0,y=!1;try{if(u=(e=e.call(t)).next,r===0){if(Object(e)!==e)return;o=!1}else for(;!(o=(n=u.call(e)).done)&&(a.push(n.value),a.length!==r);o=!0);}catch(s){y=!0,i=s}finally{try{if(!o&&e.return!=null&&(l=e.return(),Object(l)!==l))return}finally{if(y)throw i}}return a}}function c(t,r){(r==null||r>t.length)&&(r=t.length);for(var e=0,n=Array(r);e<r;e++)n[e]=t[e];return n}function m(t,r){if(t){if(typeof t=="string")return c(t,r);var e={}.toString.call(t).slice(8,-1);return e==="Object"&&t.constructor&&(e=t.constructor.name),e==="Map"||e==="Set"?Array.from(t):e==="Arguments"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?c(t,r):void 0}}function d(){throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`)}function h(t,r){return b(t)||p(t,r)||m(t,r)||d()}export{f as _,h as a,c as b,m as c};
