import{r as t,_ as W,$ as X,a as Y,c as Z,P as w,o as P,B as f,K as ee,L as re,O as ae,S as oe,T as se,V as te,j as r,x as u,G as ce,z as de,E as le}from"./index-D4EgioAp.js";import{a as ne,C as ie}from"./CCardBody-B0-cn84D.js";import{d as ue,e as me,f as pe}from"./DefaultLayout-BXdUDKRE.js";import{a as E}from"./index.esm--WqZM78H.js";import{C as he,a as Pe,b as fe}from"./CModalHeader-jkZgTmf2.js";import{C as Ce}from"./CModalTitle-DGQxAg26.js";import{C as D,a as h}from"./CRow-CSRD6VWD.js";import{C as $}from"./CFormSelect-C0XdJDmP.js";import{C as V}from"./CFormInput-Dzx3nEck.js";import{C as ye}from"./CFormTextarea-B-mkuVrx.js";import{C as ve}from"./CModalFooter-BFk4iTv2.js";import"./CConditionalPortal-DMe4fTxW.js";import"./CFormLabel-CxEZYpEj.js";var I=t.forwardRef(function(e,n){var i=e.children,o=e.as,l=o===void 0?"div":o,b=e.className,M=W(e,["children","as","className"]);return X.createElement(l,Y({className:Z("card-header",b)},M,{ref:n}),i)});I.propTypes={as:w.elementType,children:w.node,className:w.string};I.displayName="CCardHeader";const Se=async()=>{try{const e=await P.get(`${f}/${re}`);return console.log("ProcedureForm data:",e.data),e.data}catch(e){throw console.error("Error ProcedureForm data:",e.message),e.response&&(console.error("Error Response Data:",e.response.data),console.error("Error Response Status:",e.response.status)),e}},ge=async()=>{try{const e=await P.get(`${f}/${ee}`);return console.log("PreProcedureForm data:",e.data),e.data}catch(e){throw console.error("Error PreProcedureForm data:",e.message),e.response&&(console.error("Error Response Data:",e.response.data),console.error("Error Response Status:",e.response.status)),e}},xe=async()=>{try{const e=await P.get(`${f}/${ae}`);return console.log("PostProcedureForm data:",e.data),e.data}catch(e){throw console.error("Error PostProcedureForm data:",e.message),e.response&&(console.error("Error Response Data:",e.response.data),console.error("Error Response Status:",e.response.status)),e}},je=async(e,n,i)=>{try{const o={procedureName:e.procedureName||"",totalDuration:e.totalDuration||"",procedureDetails:e.procedureDetails||""},l=await P.post(`${f}/${se}/${n}/${i}`,o,{headers:{"Content-Type":"application/json"}});return console.log(l),l.data}catch(o){throw console.error("Error response from API:",o.response),o}},De=async(e,n,i)=>{try{const o={preProcedureName:e.preProcedureName||"",totalDuration:e.totalDuration||"",preProcedureDetails:e.preProcedureDetails||""},l=await P.post(`${f}/${oe}/${n}/${i}`,o,{headers:{"Content-Type":"application/json"}});return console.log(l),l.data}catch(o){throw console.error("Error response from API:",o.response),o}},be=async(e,n,i)=>{try{const o={postProcedureName:e.postProcedureName||"",totalDuration:e.totalDuration||"",postProcedureDetails:e.postProcedureDetails||""},l=await P.post(`${f}/${te}/${n}/${i}`,o,{headers:{"Content-Type":"application/json"}});return console.log(l),l.data}catch(o){throw console.error("Error response from API:",o.response),o}},Le=()=>{const[e,n]=t.useState(0),[i,o]=t.useState([]),[l,b]=t.useState([]),[M,U]=t.useState([]),[N,g]=t.useState(!1),[d,R]=t.useState({procedureName:"",totalDuration:"",procedureDetails:""}),[z,G]=t.useState([]),[B,T]=t.useState([]),[_,C]=t.useState([]),[y,k]=t.useState(""),[v,x]=t.useState(""),[m,p]=t.useState(""),j=localStorage.getItem("HospitalId")||"",F=[{key:"preProcedure",label:"Pre Procedure"},{key:"procedure",label:"Procedure"},{key:"postProcedure",label:"Post Procedure"}],L=async()=>{try{const[a,s,c]=await Promise.all([ge(),Se(),xe()]);o(a.data||[]),b(s.data||[]),U(c.data||[])}catch{u.error("Failed to fetch procedure forms")}};t.useEffect(()=>{L()},[]),t.useEffect(()=>{if(!N)return;(async()=>{try{const s=await ce();s.data&&G(s.data)}catch{u.error("Failed to fetch categories")}})()},[N]),t.useEffect(()=>{if(!y){T([]),x(""),C([]),p("");return}(async()=>{try{const s=await de();if(s.data){const c=s.data.filter(S=>S.categoryId===y);T(c),x(""),C([]),p("")}}catch{u.error("Failed to fetch services")}})()},[y]),t.useEffect(()=>{if(!v){C([]),p("");return}(async()=>{var s;try{const c=await le(v);c.data&&Array.isArray(c.data)?C(c.data):(s=c.data)!=null&&s.data&&Array.isArray(c.data.data)&&C(c.data.data),p("")}catch{u.error("Failed to fetch sub services")}})()},[v]);const K=a=>k(a.target.value),O=a=>x(a.target.value),A=a=>{const{name:s,value:c}=a.target;R(S=>({...S,[s]:c}))},J=()=>{switch(e){case 0:return{name:"Pre Procedure Name",details:"Pre Procedure Details"};case 1:return{name:"Procedure Name",details:"Procedure Details"};case 2:return{name:"Post Procedure Name",details:"Post Procedure Details"};default:return{name:"Name",details:"Details"}}},{name:H,details:q}=J(),Q=async()=>{if(!y||!v||!m){u.error("Please select Category, Service and Sub Service");return}if(!d.procedureName||!d.totalDuration){u.error("Please fill procedure name and duration");return}const a={totalDuration:d.totalDuration,subServiceId:m,hospitalId:j};try{e===0?await De({...a,preProcedureName:d.procedureName,preProcedureDetails:d.procedureDetails},j,m):e===1?await je({...a,procedureName:d.procedureName,procedureDetails:d.procedureDetails},j,m):await be({...a,postProcedureName:d.procedureName,postProcedureDetails:d.procedureDetails},j,m),u.success("Form added successfully"),g(!1),R({procedureName:"",totalDuration:"",procedureDetails:""}),k(""),x(""),p(""),L()}catch(s){u.error("Failed to add form"),console.error(s)}};return r.jsxs(ne,{children:[r.jsx(I,{children:r.jsx("strong",{children:"Procedure Form Management"})}),r.jsxs(ie,{children:[r.jsx(ue,{variant:"tabs",className:"mb-3",children:F.map((a,s)=>r.jsx(me,{children:r.jsx(pe,{active:e===s,onClick:()=>n(s),children:a.label})},a.key))}),r.jsxs(E,{color:"primary",className:"mb-3",onClick:()=>g(!0),children:["Add ",F[e].label]}),r.jsxs(he,{visible:N,onClose:()=>g(!1),children:[r.jsx(Pe,{children:r.jsxs(Ce,{children:["Add ",F[e].label]})}),r.jsxs(fe,{children:[r.jsxs(D,{className:"mb-3",children:[r.jsxs(h,{md:4,children:[r.jsx("label",{children:"Category"}),r.jsxs($,{value:y,onChange:K,children:[r.jsx("option",{value:"",children:"-- Select Category --"}),z.map(a=>r.jsx("option",{value:a.categoryId,children:a.categoryName},a.categoryId))]})]}),r.jsxs(h,{md:4,children:[r.jsx("label",{children:"Service"}),r.jsxs($,{value:v,onChange:O,disabled:!B.length,children:[r.jsx("option",{value:"",children:"-- Select Service --"}),B.map(a=>r.jsx("option",{value:a.serviceId,children:a.serviceName},a.serviceId))]})]}),r.jsxs(h,{md:4,children:[r.jsx("label",{children:"Sub Service"}),r.jsxs($,{value:m,onChange:a=>p(a.target.value),disabled:!_.length,children:[r.jsx("option",{value:"",children:"Select Sub Service"}),_.filter((a,s,c)=>s===c.findIndex(S=>S.id===a.id)).map(a=>r.jsx("option",{value:a.id,children:a.serviceName||"Unnamed Subservice"},a.id))]})]})]}),r.jsx(D,{className:"mb-3",children:r.jsxs(h,{md:12,children:[r.jsx("label",{children:H}),r.jsx(V,{name:"procedureName",value:d.procedureName,onChange:A,placeholder:`Enter ${H}`})]})}),r.jsx(D,{className:"mb-3",children:r.jsxs(h,{md:12,children:[r.jsx("label",{children:"Duration"}),r.jsx(V,{name:"totalDuration",value:d.totalDuration,onChange:A,placeholder:"Enter duration"})]})}),r.jsx(D,{children:r.jsxs(h,{md:12,children:[r.jsx("label",{children:q}),r.jsx(ye,{rows:4,name:"procedureDetails",value:d.procedureDetails,onChange:A,placeholder:`Enter ${q}`})]})})]}),r.jsxs(ve,{children:[r.jsx(E,{color:"secondary",onClick:()=>g(!1),children:"Cancel"}),r.jsx(E,{color:"primary",onClick:Q,children:"Add"})]})]})]})]})};export{Le as default};
