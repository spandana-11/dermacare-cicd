import{o as D,B as b,L as ne,O as oe,S as le,T as ie,r as a,j as e,Q as ce,G as m}from"./index-djBqUPT0.js";import{c as de,a as h}from"./index.esm-DUU_D5Td.js";/* empty css                      */import{X as me}from"./index.es-HI4CY5Sn.js";import{C as k}from"./CForm-DhlsLPS-.js";import{C as he}from"./CInputGroup-CRaktkm8.js";import{C as x}from"./CFormInput-LqSk0Wke.js";import{C as pe}from"./CInputGroupText-BjZEweQx.js";import{c as ue}from"./cil-search-CDkY_4k-.js";import{C as T,a as g,b as I}from"./CModalHeader-DDYTujZq.js";import{C as N}from"./CModalTitle-l04AQkyV.js";import{C as U,a as w}from"./CRow-D_t7w9AM.js";import{C as $}from"./CModalFooter-DVRWL7Mi.js";import"./CFormLabel-Dn5StpaC.js";import"./CConditionalPortal-an2aDlym.js";const xe=async()=>{try{const r=await D.get(`${b}/${ne}`);return console.log("treatment data:",r.data),r.data}catch(r){throw console.error("Error fetching treatment data:",r.message),r.response&&(console.error("Error Response Data:",r.response.data),console.error("Error Response Status:",r.response.status)),r}},je=async r=>{try{const o={treatmentName:r.treatmentName||"",hospitalId:r.hospitalId||""},s=await D.post(`${b}/${oe}`,o,{headers:{"Content-Type":"application/json"}});return console.log("Treatment added successfully:",s.data),s.data}catch(o){throw console.error("Error adding treatment:",o.response),o}},Ce=async(r,o,s)=>{try{return(await D.put(`${b}/${le}/${o}/${s}`,r,{headers:{"Content-Type":"application/json"}})).data}catch(p){throw console.error("Error updating treatment:",p),p}},fe=async(r,o)=>{try{const s=await D.delete(`${b}/${ie}/${r}/${o}`,{headers:{"Content-Type":"application/json"}});return console.log("Treatment deleted successfully:",s.data),s.data}catch(s){throw console.error("Error deleting treatment:",s.response?s.response.data:s),s}},Ve=()=>{const[r,o]=a.useState(""),[s,p]=a.useState([]),[M,A]=a.useState([]),[Q,F]=a.useState(!1),[L,q]=a.useState(null),[G,j]=a.useState(!1),[C,V]=a.useState(null),[_,f]=a.useState(!1),[l,v]=a.useState(null),[ye,O]=a.useState({treatmentName:"",hospitalId:""}),[X,S]=a.useState(!1),[z,H]=a.useState(null),[i,E]=a.useState({treatmentName:"",hospitalId:""}),[J,R]=a.useState(null),K=t=>t.map(n=>({...n,id:n.id||n._id})),y=async()=>{F(!0);try{const t=await xe();p(K(t.data))}catch{q("Failed to fetch treatment data.")}finally{F(!1)}},P=async()=>{try{await fe(z,J),m.success("Treatment deleted successfully!",{position:"top-right"}),y()}catch(t){m.error("Failed to delete treatment."),console.error("Delete error:",t)}S(!1)},W=()=>{H(null),R(null),S(!1)};a.useEffect(()=>{y()},[]),a.useEffect(()=>{const t=r.toLowerCase().trim();if(!t){A([]);return}const n=s.filter(c=>{var d;return(d=c.treatmentName)==null?void 0:d.toLowerCase().includes(t)});A(n)},[r,s]);const Y=()=>{const t={};return i.treatmentName.trim()||(t.treatmentName="Treatment name is required."),i.hospitalId.trim()||(t.hospitalId="Hospital ID is required."),O(t),Object.keys(t).length===0},Z=async()=>{var t,n,c,d;if(Y())try{const u={treatmentName:i.treatmentName,hospitalId:i.hospitalId};await je(u),m.success("Treatment added successfully!"),y(),j(!1),E({treatmentName:"",hospitalId:""})}catch(u){const B=((n=(t=u.response)==null?void 0:t.data)==null?void 0:n.message)||((c=u.response)==null?void 0:c.statusText)||"An unexpected error occurred.";((d=u.response)==null?void 0:d.status)===409||B.toLowerCase().includes("duplicate")?m.error(`Error: Duplicate treatment name - ${i.treatmentName} already exists!`,{position:"top-right"}):m.error(`Error adding treatment: ${B}`,{position:"top-right"})}},ee=t=>{v(t),f(!0)},te=async()=>{const{id:t,hospitalId:n}=l;try{await Ce(l,t,n),m.success("Treatment updated successfully!"),f(!1),y()}catch(c){console.error("Update error:",c),m.error("Failed to update treatment.")}},re=t=>{H(t.treatmentId||t.id||t._id),R(t.hospitalId),S(!0)},se=[{name:"S.No",selector:(t,n)=>n+1,width:"10%"},{name:"Treatment Name",selector:t=>t.treatmentName,sortable:!0,width:"45%"},{name:"Actions",cell:t=>e.jsxs("div",{style:{display:"flex",justifyContent:"space-between",width:"250px"},children:[e.jsx("div",{onClick:()=>V(t),style:{color:"green",cursor:"pointer"},children:"View"}),e.jsx("div",{onClick:()=>ee(t),style:{color:"blue",cursor:"pointer"},children:"Edit"}),e.jsx("div",{onClick:()=>re(t),style:{color:"red",cursor:"pointer"},children:"Delete"})]})}],ae=({isVisible:t,message:n,onConfirm:c,onCancel:d})=>e.jsxs(T,{visible:t,onClose:d,backdrop:"static",children:[e.jsx(g,{children:e.jsx(N,{children:"Confirmation"})}),e.jsx(I,{children:n}),e.jsxs($,{children:[e.jsx(h,{color:"secondary",onClick:d,children:"Cancel"}),e.jsx(h,{color:"danger",onClick:c,children:"Confirm"})]})]});return e.jsxs("div",{children:[e.jsx(ce,{}),e.jsxs(k,{className:"d-flex justify-content-between mb-3",children:[e.jsxs(he,{className:"mb-3",style:{width:"300px",marginLeft:"40px"},children:[e.jsx(x,{type:"text",placeholder:"Search by Treatment Name",value:r,onChange:t=>o(t.target.value)}),e.jsx(pe,{children:e.jsx(de,{icon:ue})})]}),e.jsx(h,{color:"primary",style:{marginRight:"100px"},onClick:()=>j(!0),children:"Add Treatment"})]}),C&&e.jsxs(T,{visible:!!C,onClose:()=>V(null),children:[e.jsx(g,{children:e.jsx(N,{children:"Treatment Details"})}),e.jsxs(I,{children:[e.jsxs(U,{className:"mb-3",children:[e.jsx(w,{sm:4,children:e.jsx("strong",{children:"Treatment Name:"})}),e.jsx(w,{sm:8,children:C.treatmentName})]}),e.jsxs(U,{className:"mb-3",children:[e.jsx(w,{sm:4,children:e.jsx("strong",{children:"Hospital ID:"})}),e.jsx(w,{sm:8,children:C.hospitalId})]})]})]}),e.jsxs(T,{visible:G,onClose:()=>j(!1),backdrop:"static",children:[e.jsx(g,{children:e.jsx(N,{children:"Add New Treatment"})}),e.jsx(I,{children:e.jsxs(k,{children:[e.jsxs("h6",{children:["Treatment Name ",e.jsx("span",{style:{color:"red"},children:"*"})]}),e.jsx(x,{type:"text",name:"treatmentName",value:i.treatmentName,onChange:t=>E({...i,treatmentName:t.target.value})}),e.jsxs("h6",{className:"mt-3",children:["Hospital ID ",e.jsx("span",{style:{color:"red"},children:"*"})]}),e.jsx(x,{type:"text",name:"hospitalId",value:i.hospitalId,onChange:t=>E({...i,hospitalId:t.target.value})})]})}),e.jsxs($,{children:[e.jsx(h,{color:"primary",onClick:Z,children:"Add"}),e.jsx(h,{color:"secondary",onClick:()=>j(!1),children:"Cancel"})]})]}),e.jsxs(T,{visible:_,onClose:()=>f(!1),backdrop:"static",children:[e.jsx(g,{children:e.jsx(N,{children:"Edit Treatment"})}),e.jsx(I,{children:e.jsxs(k,{children:[e.jsx("h6",{children:"Treatment Name"}),e.jsx(x,{type:"text",value:(l==null?void 0:l.treatmentName)||"",onChange:t=>v({...l,treatmentName:t.target.value})}),e.jsx("h6",{className:"mt-3",children:"Hospital ID"}),e.jsx(x,{type:"text",value:(l==null?void 0:l.hospitalId)||"",onChange:t=>v({...l,hospitalId:t.target.value})})]})}),e.jsxs($,{children:[e.jsx(h,{color:"primary",onClick:te,children:"Update"}),e.jsx(h,{color:"secondary",onClick:()=>f(!1),children:"Cancel"})]})]}),e.jsx(ae,{isVisible:X,message:"Are you sure you want to delete this treatment?",onConfirm:P,onCancel:W}),Q?e.jsx("div",{style:{textAlign:"center"},children:"Loading..."}):L?e.jsx("div",{children:L}):e.jsx(me,{columns:se,data:M.length?M:s,pagination:!0})]})};export{Ve as default};
