import{o as S,B as I,I as ie,J as ne,U as le,K as de,r,j as e,Q as ce,y as p}from"./index-D-oDOyWO.js";import{c as pe,a as h}from"./index.esm-Dag7HEVz.js";/* empty css                      */import{X as ue}from"./index.es-CyaLuy6q.js";import{C as $}from"./CForm-C_9ZANgI.js";import{C as he}from"./CInputGroup-DFlVQaGa.js";import{C as N}from"./CFormInput-CxOD02nI.js";import{C as me}from"./CInputGroupText-Bw8sjWME.js";import{c as xe}from"./cil-search-CDkY_4k-.js";import{C as w,a as b,b as v}from"./CModalHeader-DCaq31xv.js";import{C as E}from"./CModalTitle-B_oINO8I.js";import{C as fe,a as _}from"./CRow-C5UAjCDF.js";import{C as A}from"./CModalFooter-Cjr_bjNp.js";import"./CFormLabel-ccOuQI7Q.js";import"./CConditionalPortal-Cy0Xk2dr.js";const je=async()=>{try{const a=await S.get(`${I}/${ie}`);return console.log("Disease data:",a.data),a.data}catch(a){throw console.error("Error fetching disease data:",a.message),a.response&&(console.error("Error Response Data:",a.response.data),console.error("Error Response Status:",a.response.status)),a}},De=async a=>{var n;try{const o={disease:a.disease||"",hospitalId:a.hospitalId||""},i=await S.post(`${I}/${ne}`,o,{headers:{"Content-Type":"application/json"}});return console.log("Add Disease Response:",i),i.data}catch(o){throw console.error("Error adding disease:",((n=o.response)==null?void 0:n.data)||o),o}},ye=async(a,n,o)=>{var i;try{return(await S.put(`${I}/${le}/${n}/${o}`,a,{headers:{"Content-Type":"application/json"}})).data}catch(u){throw console.error("Error updating disease:",((i=u.response)==null?void 0:i.data)||u),u}},Ce=async(a,n)=>{var o;try{const i=await S.delete(`${I}/${de}/${a}/${n}`,{headers:{"Content-Type":"application/json"}});return console.log("Disease deleted successfully:",i.data),i.data}catch(i){throw console.error("Error deleting disease:",((o=i.response)==null?void 0:o.data)||i),i}},Ve=()=>{const[a,n]=r.useState(""),[o,i]=r.useState([]),[u,T]=r.useState([]),[q,f]=r.useState(!1),[F,G]=r.useState(null),[X,j]=r.useState(!1),[k,L]=r.useState(null),[z,D]=r.useState(!1),[l,R]=r.useState(null),[y,V]=r.useState({}),[J,M]=r.useState(!1),[K,U]=r.useState(null),[O,B]=r.useState(null),[m,Q]=r.useState({disease:""}),C=localStorage.getItem("HospitalId"),P=s=>s.map(t=>({...t,id:t.id||t._id,disease:t.disease||""})),g=async()=>{f(!0);try{const s=await je();i(P(s.data))}catch{G("Failed to fetch disease data.")}finally{f(!1)}},W=async()=>{try{await Ce(K,O),p.success("Disease deleted successfully!",{position:"top-right"}),g()}catch(s){p.error("Failed to delete disease."),console.error("Delete error:",s)}M(!1)},Y=()=>{U(null),B(null),M(!1)};r.useEffect(()=>{g()},[]),r.useEffect(()=>{const s=a.toLowerCase().trim();if(!s){T([]);return}const t=o.filter(d=>{var c;return(c=d.disease)==null?void 0:c.toLowerCase().includes(s)});T(t)},[a,o]);const Z=()=>{const s={};return m.disease.trim()||(s.disease="Disease name is required."),V(s),Object.keys(s).length===0},ee=async()=>{var s,t,d,c;if(Z())try{const x={disease:m.disease,hospitalId:C};await De(x),p.success("Disease added successfully!"),Q({disease:""}),n(""),g(),j(!1)}catch(x){const H=((t=(s=x.response)==null?void 0:s.data)==null?void 0:t.message)||((d=x.response)==null?void 0:d.statusText)||"An unexpected error occurred.";((c=x.response)==null?void 0:c.status)===409||H.toLowerCase().includes("duplicate")?p.error(`Error: Duplicate disease name - ${m.disease} already exists!`,{position:"top-right"}):p.error(`Error adding disease: ${H}`,{position:"top-right"})}},se=s=>{R({...s,hospitalId:C}),D(!0)},ae=async()=>{if(!l||!l.id){p.error("Missing disease data to update.");return}const{id:s}=l;f(!0);try{await ye({disease:l.disease,hospitalId:C},s,C),p.success("Disease updated successfully!"),D(!1),g()}catch(t){console.error("Update error:",t),p.error("Failed to update disease.")}finally{f(!1)}},te=s=>{U(s.diseaseId||s.id||s._id),B(s.hospitalId),M(!0)},re=[{name:"S.No",selector:(s,t)=>t+1,width:"10%"},{name:"Disease Name",selector:s=>s.disease,sortable:!0,width:"45%"},{name:"Actions",cell:s=>e.jsxs("div",{style:{display:"flex",justifyContent:"space-between",width:"250px"},children:[e.jsx("div",{onClick:()=>L(s),style:{color:"green",cursor:"pointer"},children:"View"}),e.jsx("div",{onClick:()=>se(s),style:{color:"blue",cursor:"pointer"},children:"Edit"}),e.jsx("div",{onClick:()=>te(s),style:{color:"red",cursor:"pointer"},children:"Delete"})]})}],oe=({isVisible:s,message:t,onConfirm:d,onCancel:c})=>e.jsxs(w,{visible:s,onClose:c,backdrop:"static",children:[e.jsx(b,{children:e.jsx(E,{children:"Confirmation"})}),e.jsx(v,{children:t}),e.jsxs(A,{children:[e.jsx(h,{color:"secondary",onClick:c,children:"Cancel"}),e.jsx(h,{color:"danger",onClick:d,children:"Confirm"})]})]});return e.jsxs("div",{children:[e.jsx(ce,{}),e.jsxs($,{className:"d-flex justify-content-between mb-3",children:[e.jsxs(he,{className:"mb-3",style:{width:"300px",marginLeft:"40px"},children:[e.jsx(N,{type:"text",placeholder:"Search by Disease Name",value:a,onChange:s=>n(s.target.value)}),e.jsx(me,{children:e.jsx(pe,{icon:xe})})]}),e.jsx(h,{color:"primary",style:{marginRight:"100px"},onClick:()=>j(!0),children:"Add Disease"})]}),k&&e.jsxs(w,{visible:!!k,onClose:()=>L(null),children:[e.jsx(b,{children:e.jsx(E,{children:"Disease Details"})}),e.jsx(v,{children:e.jsxs(fe,{className:"mb-3",children:[e.jsx(_,{sm:4,children:e.jsx("strong",{children:"Disease Name:"})}),e.jsx(_,{sm:8,children:k.disease})]})})]}),e.jsxs(w,{visible:X,onClose:()=>j(!1),backdrop:"static",children:[e.jsx(b,{children:e.jsx(E,{children:"Add New Disease"})}),e.jsx(v,{children:e.jsxs($,{children:[e.jsxs("h6",{children:["Disease Name ",e.jsx("span",{style:{color:"red"},children:"*"})]}),e.jsx(N,{type:"text",name:"disease",value:m.disease,onChange:s=>{const t=s.target.value;Q({...m,disease:t}),y.disease&&V(d=>({...d,disease:""}))},placeholder:"Enter disease name",className:y.disease?"is-invalid":""}),y.disease&&e.jsx("div",{className:"invalid-feedback",style:{color:"red"},children:y.disease})]})}),e.jsxs(A,{children:[e.jsx(h,{color:"primary",onClick:ee,children:"Add"}),e.jsx(h,{color:"secondary",onClick:()=>j(!1),children:"Cancel"})]})]}),e.jsxs(w,{visible:z,onClose:()=>D(!1),backdrop:"static",children:[e.jsx(b,{children:e.jsx(E,{children:"Edit Disease"})}),e.jsx(v,{children:e.jsxs($,{children:[e.jsx("h6",{children:"Disease Name"}),e.jsx(N,{type:"text",value:(l==null?void 0:l.disease)||"",onChange:s=>R({...l,disease:s.target.value})})]})}),e.jsxs(A,{children:[e.jsx(h,{color:"primary",onClick:ae,children:"Update"}),e.jsx(h,{color:"secondary",onClick:()=>D(!1),children:"Cancel"})]})]}),e.jsx(oe,{isVisible:J,message:"Are you sure you want to delete this disease?",onConfirm:W,onCancel:Y}),q?e.jsx("div",{style:{textAlign:"center"},children:"Loading..."}):F?e.jsx("div",{children:F}):e.jsx(ue,{columns:re,data:u.length?u:o,pagination:!0})]})};export{Ve as default};
