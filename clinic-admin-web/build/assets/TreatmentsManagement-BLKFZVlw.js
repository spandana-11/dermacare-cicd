import{o as b,B as D,a1 as oe,a2 as le,a3 as ie,r as n,j as e,Q as ce,y as m}from"./index-BQRndUr-.js";import{c as de,a as u}from"./index.esm-kPg_xJHJ.js";/* empty css                      */import{X as me}from"./index.es-CnO2hUzf.js";import{C as A}from"./CForm-ErNLGUDF.js";import{C as he}from"./CInputGroup-5zPXr3Y-.js";import{C as j}from"./CFormInput-CGpy1-2P.js";import{C as pe}from"./CInputGroupText-Df5m6PW7.js";import{c as ue}from"./cil-search-CDkY_4k-.js";import{C as N,a as g,b as I}from"./CModalHeader-CnBCdOSi.js";import{C as v}from"./CModalTitle-CTMCnDzP.js";import{C as U,a as w}from"./CRow-CiETNr7h.js";import{C as F}from"./CModalFooter-Do3Y1geN.js";import"./CFormLabel-DMA6u-r3.js";import"./CConditionalPortal-D0WgdB7t.js";const xe=async()=>{try{const a=await b.get(`${D}/${oe}`);return console.log("treatment data:",a.data),a.data}catch(a){throw console.error("Error fetching treatment data:",a.message),a.response&&(console.error("Error Response Data:",a.response.data),console.error("Error Response Status:",a.response.status)),a}},je=async a=>{try{const l={treatmentName:a.treatmentName||"",hospitalId:a.hospitalId||""},s=await b.post(`${D}/${le}`,l,{headers:{"Content-Type":"application/json"}});return console.log("Treatment added successfully:",s.data),s.data}catch(l){throw console.error("Error adding treatment:",l.response),l}},fe=async(a,l,s)=>{try{const p={testName:a.treatmentName};return(await b.put(`${D}/labtest/updateLabTest/${l}/${s}`,p,{headers:{"Content-Type":"application/json"}})).data}catch(p){throw console.error("Error updating treatment:",p.response||p),p}},ye=async(a,l)=>{try{const s=await b.delete(`${D}/${ie}/${a}/${l}`,{headers:{"Content-Type":"application/json"}});return console.log("Treatment deleted successfully:",s.data),s.data}catch(s){throw console.error("Error deleting treatment:",s.response?s.response.data:s),s}},Le=()=>{const[a,l]=n.useState(""),[s,p]=n.useState([]),[E,L]=n.useState([]),[_,H]=n.useState(!1),[V,G]=n.useState(null),[X,f]=n.useState(!1),[y,B]=n.useState(null),[z,C]=n.useState(!1),[c,S]=n.useState(null),[h,k]=n.useState({}),[O,$]=n.useState(!1),[J,R]=n.useState(null),[d,M]=n.useState({treatmentName:"",hospitalId:""}),[K,q]=n.useState(null),P=t=>t.map(r=>({...r,id:r.id||r._id})),T=async()=>{H(!0);try{const t=await xe();p(P(t.data))}catch{G("Failed to fetch treatment data.")}finally{H(!1)}},W=async()=>{try{await ye(J,K),m.success("Treatment deleted successfully!",{position:"top-right"}),T()}catch(t){m.error("Failed to delete treatment."),console.error("Delete error:",t)}$(!1)},Y=()=>{R(null),q(null),$(!1)};n.useEffect(()=>{T()},[]),n.useEffect(()=>{const t=a.toLowerCase().trim();if(!t){L([]);return}const r=s.filter(o=>{var i;return(i=o.treatmentName)==null?void 0:i.toLowerCase().includes(t)});L(r)},[a,s]);const Z=()=>{const t={};return d.treatmentName.trim()||(t.treatmentName="Treatment name is required."),d.hospitalId.trim()||(t.hospitalId="Hospital ID is required."),k(t),Object.keys(t).length===0},ee=async()=>{var t,r,o,i;if(Z())try{const x={treatmentName:d.treatmentName,hospitalId:d.hospitalId};await je(x),m.success("Treatment added successfully!"),T(),f(!1),M({treatmentName:"",hospitalId:""})}catch(x){const Q=((r=(t=x.response)==null?void 0:t.data)==null?void 0:r.message)||((o=x.response)==null?void 0:o.statusText)||"An unexpected error occurred.";((i=x.response)==null?void 0:i.status)===409||Q.toLowerCase().includes("duplicate")?m.error(`Error: Duplicate treatment name - ${d.treatmentName} already exists!`,{position:"top-right"}):m.error(`Error adding treatment: ${Q}`,{position:"top-right"})}},te=t=>{S(t),C(!0)},re=async()=>{const{id:t,hospitalId:r,treatmentName:o}=c;if(!t||!/^[a-f\d]{24}$/i.test(t)){m.error("Invalid treatment ID");return}if(!o.trim()||!r.trim()){m.error("Both fields are required");return}try{await fe({treatmentName:o.trim(),hospitalId:r.trim()},t,r),m.success("Treatment updated successfully!"),C(!1),T()}catch(i){console.error("Update error:",i),m.error("Failed to update treatment.")}},ae=t=>{R(t.treatmentId||t.id||t._id),q(t.hospitalId),$(!0)},se=[{name:"S.No",selector:(t,r)=>r+1,width:"10%"},{name:"Treatment Name",selector:t=>t.treatmentName,sortable:!0,width:"45%"},{name:"Actions",cell:t=>e.jsxs("div",{style:{display:"flex",justifyContent:"space-between",width:"250px"},children:[e.jsx("div",{onClick:()=>B(t),style:{color:"green",cursor:"pointer"},children:"View"}),e.jsx("div",{onClick:()=>te(t),style:{color:"blue",cursor:"pointer"},children:"Edit"}),e.jsx("div",{onClick:()=>ae(t),style:{color:"red",cursor:"pointer"},children:"Delete"})]})}],ne=({isVisible:t,message:r,onConfirm:o,onCancel:i})=>e.jsxs(N,{visible:t,onClose:i,backdrop:"static",children:[e.jsx(g,{children:e.jsx(v,{children:"Confirmation"})}),e.jsx(I,{children:r}),e.jsxs(F,{children:[e.jsx(u,{color:"secondary",onClick:i,children:"Cancel"}),e.jsx(u,{color:"danger",onClick:o,children:"Confirm"})]})]});return e.jsxs("div",{children:[e.jsx(ce,{}),e.jsxs(A,{className:"d-flex justify-content-between mb-3",children:[e.jsxs(he,{className:"mb-3",style:{width:"300px",marginLeft:"40px"},children:[e.jsx(j,{type:"text",placeholder:"Search by Treatment Name",value:a,onChange:t=>l(t.target.value)}),e.jsx(pe,{children:e.jsx(de,{icon:ue})})]}),e.jsx(u,{color:"primary",style:{marginRight:"100px"},onClick:()=>f(!0),children:"Add Treatment"})]}),y&&e.jsxs(N,{visible:!!y,onClose:()=>B(null),children:[e.jsx(g,{children:e.jsx(v,{children:"Treatment Details"})}),e.jsxs(I,{children:[e.jsxs(U,{className:"mb-3",children:[e.jsx(w,{sm:4,children:e.jsx("strong",{children:"Treatment Name:"})}),e.jsx(w,{sm:8,children:y.treatmentName})]}),e.jsxs(U,{className:"mb-3",children:[e.jsx(w,{sm:4,children:e.jsx("strong",{children:"Hospital ID:"})}),e.jsx(w,{sm:8,children:y.hospitalId})]})]})]}),e.jsxs(N,{visible:X,onClose:()=>f(!1),backdrop:"static",children:[e.jsx(g,{children:e.jsx(v,{children:"Add New Treatment"})}),e.jsx(I,{children:e.jsxs(A,{children:[e.jsxs("h6",{children:["Treatment Name ",e.jsx("span",{style:{color:"red"},children:"*"})]}),e.jsx(j,{type:"text",name:"treatmentName",value:d.treatmentName,onChange:t=>{const r=t.target.value;M({...d,treatmentName:r}),h.treatmentName&&k(o=>({...o,treatmentName:""}))},placeholder:"Enter Treatment Name",className:h.treatmentName?"is-invalid":""}),h.treatmentName&&e.jsx("div",{className:"invalid-feedback",style:{color:"red"},children:h.treatmentName}),e.jsxs("h6",{className:"mt-3",children:["Hospital ID ",e.jsx("span",{style:{color:"red"},children:"*"})]}),e.jsx(j,{type:"text",name:"hospitalId",value:d.hospitalId,onChange:t=>{const r=t.target.value;M({...d,hospitalId:r}),h.hospitalId&&k(o=>({...o,hospitalId:""}))},placeholder:"Enter Hospital Id",className:h.hospitalId?"is-invalid":""}),h.hospitalId&&e.jsx("div",{className:"invalid-feedback",style:{color:"red"},children:h.hospitalId})]})}),e.jsxs(F,{children:[e.jsx(u,{color:"primary",onClick:ee,children:"Add"}),e.jsx(u,{color:"secondary",onClick:()=>f(!1),children:"Cancel"})]})]}),e.jsxs(N,{visible:z,onClose:()=>C(!1),backdrop:"static",children:[e.jsx(g,{children:e.jsx(v,{children:"Edit Treatment"})}),e.jsx(I,{children:e.jsxs(A,{children:[e.jsx("h6",{children:"Treatment Name"}),e.jsx(j,{type:"text",value:(c==null?void 0:c.treatmentName)||"",onChange:t=>S({...c,treatmentName:t.target.value})}),e.jsx("h6",{className:"mt-3",children:"Hospital ID"}),e.jsx(j,{type:"text",value:(c==null?void 0:c.hospitalId)||"",onChange:t=>S({...c,hospitalId:t.target.value})})]})}),e.jsxs(F,{children:[e.jsx(u,{color:"primary",onClick:re,children:"Update"}),e.jsx(u,{color:"secondary",onClick:()=>C(!1),children:"Cancel"})]})]}),e.jsx(ne,{isVisible:O,message:"Are you sure you want to delete this treatment?",onConfirm:W,onCancel:Y}),_?e.jsx("div",{style:{textAlign:"center"},children:"Loading..."}):V?e.jsx("div",{children:V}):e.jsx(me,{columns:se,data:E.length?E:s,pagination:!0})]})};export{Le as default};
