import{o as S,B as I,H as ie,I as ne,U as le,J as de,r,j as e,Q as ce,x as u}from"./index-D4EgioAp.js";import{c as pe,a as m}from"./index.esm--WqZM78H.js";/* empty css                      */import{X as ue}from"./index.es-DN_MbvvP.js";import{C as M}from"./CForm-DnvnHnhV.js";import{C as he}from"./CInputGroup-ZOd-amrn.js";import{C as N}from"./CFormInput-Dzx3nEck.js";import{C as me}from"./CInputGroupText-Ccdw2IMc.js";import{c as xe}from"./cil-search-CDkY_4k-.js";import{C as w,a as b,b as v}from"./CModalHeader-jkZgTmf2.js";import{C as E}from"./CModalTitle-DGQxAg26.js";import{C as fe,a as G}from"./CRow-CSRD6VWD.js";import{C as A}from"./CModalFooter-BFk4iTv2.js";import"./CFormLabel-CxEZYpEj.js";import"./CConditionalPortal-DMe4fTxW.js";const je=async n=>{try{const t=await S.get(`${I}/${ie}/${n}`);return console.log("test data:",t.data),t.data}catch(t){throw console.error("Error fetching test data:",t.message),t.response&&(console.error("Error Response Data:",t.response.data),console.error("Error Response Status:",t.response.status)),t}},ye=async n=>{var t;try{const o={disease:n.disease||"",hospitalId:n.hospitalId||""},i=await S.post(`${I}/${ne}`,o,{headers:{"Content-Type":"application/json"}});return console.log("Add Disease Response:",i),i.data}catch(o){throw console.error("Error adding disease:",((t=o.response)==null?void 0:t.data)||o),o}},Ce=async(n,t,o)=>{var i;try{return(await S.put(`${I}/${le}/${t}/${o}`,n,{headers:{"Content-Type":"application/json"}})).data}catch(h){throw console.error("Error updating disease:",((i=h.response)==null?void 0:i.data)||h),h}},De=async(n,t)=>{var o;try{const i=await S.delete(`${I}/${de}/${n}/${t}`,{headers:{"Content-Type":"application/json"}});return console.log("Disease deleted successfully:",i.data),i.data}catch(i){throw console.error("Error deleting disease:",((o=i.response)==null?void 0:o.data)||i),i}},Le=()=>{const[n,t]=r.useState(""),[o,i]=r.useState([]),[h,T]=r.useState([]),[_,j]=r.useState(!1),[B,q]=r.useState(null),[X,y]=r.useState(!1),[k,F]=r.useState(null),[z,C]=r.useState(!1),[l,H]=r.useState(null),[D,L]=r.useState({}),[J,$]=r.useState(!1),[O,R]=r.useState(null),[K,V]=r.useState(null),[x,U]=r.useState({disease:""}),d=localStorage.getItem("HospitalId"),P=s=>s.map(a=>({...a,id:a.id||a._id,disease:a.disease||""})),g=async s=>{j(!0);try{const a=await je(s);i(P(a.data))}catch{q("Failed to fetch disease data.")}finally{j(!1)}},W=async()=>{try{await De(O,K),u.success("Disease deleted successfully!",{position:"top-right"}),g(d)}catch(s){u.error("Failed to delete disease."),console.error("Delete error:",s)}$(!1)},Y=()=>{R(null),V(null),$(!1)};r.useEffect(()=>{g(d)},[]),r.useEffect(()=>{const s=n.toLowerCase().trim();if(!s){T([]);return}const a=o.filter(c=>{var p;return(p=c.disease)==null?void 0:p.toLowerCase().includes(s)});T(a)},[n,o]);const Z=()=>{const s={};return x.disease.trim()||(s.disease="Disease name is required."),L(s),Object.keys(s).length===0},ee=async()=>{var s,a,c,p;if(Z())try{const f={disease:x.disease,hospitalId:d};await ye(f),u.success("Disease added successfully!"),U({disease:""}),t(""),g(d),y(!1)}catch(f){const Q=((a=(s=f.response)==null?void 0:s.data)==null?void 0:a.message)||((c=f.response)==null?void 0:c.statusText)||"An unexpected error occurred.";((p=f.response)==null?void 0:p.status)===409||Q.toLowerCase().includes("duplicate")?u.error(`Error: Duplicate disease name - ${x.disease} already exists!`,{position:"top-right"}):u.error(`Error adding disease: ${Q}`,{position:"top-right"})}},se=s=>{H({...s,hospitalId:d}),C(!0)},ae=async()=>{if(!l||!l.id){u.error("Missing disease data to update.");return}const{id:s}=l;j(!0);try{await Ce({disease:l.disease,hospitalId:d},s,d),u.success("Disease updated successfully!"),C(!1),g(d)}catch(a){console.error("Update error:",a),u.error("Failed to update disease.")}finally{j(!1)}},te=s=>{R(s.diseaseId||s.id||s._id),V(s.hospitalId),$(!0)},re=[{name:"S.No",selector:(s,a)=>a+1,width:"10%"},{name:"Disease Name",selector:s=>s.disease,sortable:!0,width:"45%"},{name:"Actions",cell:s=>e.jsxs("div",{style:{display:"flex",justifyContent:"space-between",width:"250px"},children:[e.jsx("div",{onClick:()=>F(s),style:{color:"green",cursor:"pointer"},children:"View"}),e.jsx("div",{onClick:()=>se(s),style:{color:"blue",cursor:"pointer"},children:"Edit"}),e.jsx("div",{onClick:()=>te(s),style:{color:"red",cursor:"pointer"},children:"Delete"})]})}],oe=({isVisible:s,message:a,onConfirm:c,onCancel:p})=>e.jsxs(w,{visible:s,onClose:p,backdrop:"static",children:[e.jsx(b,{children:e.jsx(E,{children:"Confirmation"})}),e.jsx(v,{children:a}),e.jsxs(A,{children:[e.jsx(m,{color:"secondary",onClick:p,children:"Cancel"}),e.jsx(m,{color:"danger",onClick:c,children:"Confirm"})]})]});return e.jsxs("div",{children:[e.jsx(ce,{}),e.jsxs(M,{className:"d-flex justify-content-between mb-3",children:[e.jsxs(he,{className:"mb-3",style:{width:"300px",marginLeft:"40px"},children:[e.jsx(N,{type:"text",placeholder:"Search by Disease Name",value:n,onChange:s=>t(s.target.value)}),e.jsx(me,{children:e.jsx(pe,{icon:xe})})]}),e.jsx(m,{color:"primary",style:{marginRight:"100px"},onClick:()=>y(!0),children:"Add Disease"})]}),k&&e.jsxs(w,{visible:!!k,onClose:()=>F(null),children:[e.jsx(b,{children:e.jsx(E,{children:"Disease Details"})}),e.jsx(v,{children:e.jsxs(fe,{className:"mb-3",children:[e.jsx(G,{sm:4,children:e.jsx("strong",{children:"Disease Name:"})}),e.jsx(G,{sm:8,children:k.disease})]})})]}),e.jsxs(w,{visible:X,onClose:()=>y(!1),backdrop:"static",children:[e.jsx(b,{children:e.jsx(E,{children:"Add New Disease"})}),e.jsx(v,{children:e.jsxs(M,{children:[e.jsxs("h6",{children:["Disease Name ",e.jsx("span",{style:{color:"red"},children:"*"})]}),e.jsx(N,{type:"text",name:"disease",value:x.disease,onChange:s=>{const a=s.target.value;U({...x,disease:a}),D.disease&&L(c=>({...c,disease:""}))},placeholder:"Enter disease name",className:D.disease?"is-invalid":""}),D.disease&&e.jsx("div",{className:"invalid-feedback",style:{color:"red"},children:D.disease})]})}),e.jsxs(A,{children:[e.jsx(m,{color:"primary",onClick:ee,children:"Add"}),e.jsx(m,{color:"secondary",onClick:()=>y(!1),children:"Cancel"})]})]}),e.jsxs(w,{visible:z,onClose:()=>C(!1),backdrop:"static",children:[e.jsx(b,{children:e.jsx(E,{children:"Edit Disease"})}),e.jsx(v,{children:e.jsxs(M,{children:[e.jsx("h6",{children:"Disease Name"}),e.jsx(N,{type:"text",value:(l==null?void 0:l.disease)||"",onChange:s=>H({...l,disease:s.target.value})})]})}),e.jsxs(A,{children:[e.jsx(m,{color:"primary",onClick:ae,children:"Update"}),e.jsx(m,{color:"secondary",onClick:()=>C(!1),children:"Cancel"})]})]}),e.jsx(oe,{isVisible:J,message:"Are you sure you want to delete this disease?",onConfirm:W,onCancel:Y}),_?e.jsx("div",{style:{textAlign:"center"},children:"Loading..."}):B?e.jsx("div",{children:B}):e.jsx(ue,{columns:re,data:h.length?h:o,pagination:!0})]})};export{Le as default};
